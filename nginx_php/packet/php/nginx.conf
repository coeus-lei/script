user www www;

worker_processes  auto;
worker_rlimit_nofile 1000000;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

pid /var/run/nginx.pid;


events {
    use epoll;
    # 每个进程可以打开多少个连接
    worker_connections  1000000;
	# 关闭进程间的互斥锁,每次连接过来,所有进程都进行服务
	accept_mutex off;
    #尽可能多的接收连接
    multi_accept on;
}

thread_pool phpThread threads=32 max_queue=1000000;

http {
	sendfile 	on;
	tcp_nopush 	on;
    server_tokens off;
	tcp_nodelay on;
	keepalive_timeout  60;
    variables_hash_max_size 4096;
    server_names_hash_bucket_size 2048;
    client_header_buffer_size 32k;
    large_client_header_buffers 4 32k;
    client_max_body_size 500m;
	
	directio 8k;
	aio threads=phpThread;
	
    include       mime.types;
    default_type  application/octet-stream;
	
    log_format  main  '$remote_addr "$host" [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$upstream_addr" "$upstream_status" "$http_user_agent"';
    
    #关闭访问日志 可以减少IO操作
    access_log  off;

    #设置错误日志等级，只记录严重错误  普通错误以上设置为info
    error_log   logs/webError.log crit;
    
    more_set_headers "Server: tengine Web";
    more_clear_headers "Content-Type: ";
    more_clear_headers "Accespt-Ranges: ";
    more_clear_headers "Content-Length: ";

    fastcgi_connect_timeout 300;
    fastcgi_send_timeout 300;
    fastcgi_read_timeout 300;
    fastcgi_buffer_size 64k;
    fastcgi_buffers 4 64k;
    fastcgi_busy_buffers_size 128k;
    fastcgi_temp_file_write_size 128k;

    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;


    #采用gzip压缩的形式发送数据 会减少发送的数据量 不过我们一般返回的数据很小 基本不用设置
    gzip               on;
    gzip_vary          on;
    gzip_comp_level    6;
    gzip_buffers       16 8k;
    gzip_min_length    1k;
    gzip_proxied       any;
    gzip_disable       "msie6";
    gzip_http_version  1.0;
    gzip_types         text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript;
    

    #引入其他配置
    include /usr/local/nginx/conf/conf.d/*.conf;
}
